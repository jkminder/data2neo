# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        neo4j-version: ["5.2.0", "4.4.15"]   
  
    services:
          neo4j:
            image: neo4j:${{ matrix.neo4j-version }}
            env:
              NEO4J_dbms_security_procedures_unrestricted: apoc.*
              NEO4J_dbms_connector_bolt_enabled: "true"
              NEO4J_apoc_import_file_enabled: "true"
              apoc.export.file.enabled: "true" # For 5.x
              NEO4J_apoc_export_file_enabled: "true"
              apoc.import.file.enabled: "true" # For 5.x
              NEO4J_apoc_import_file_use__neo4j__config: "true"
              apoc.import.file.use_neo4j_config: "true" # For 5.x
              NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
              NEO4J_dbms_security_auth__enabled: "false"
              NEO4J_dbms_connector_bolt_advertised__address: localhost:7687
              NEO4JLABS_PLUGINS: '["apoc"]'
            options: >-
              --health-cmd "cypher-shell 'match (n) return count(n)'"
              --health-timeout 10s
              --health-retries 20
              --health-interval 10s
              --health-start-period 30s
            ports:
              - 7687:7687
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        pytest
