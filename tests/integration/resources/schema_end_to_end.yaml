ENTITY("Flower"):
    NODE("Flower") flower:
        - sepal_length = FLOAT(Flower.sepal_length)
        - sepal_width = FLOAT(Flower.sepal_width)
        - petal_length = FLOAT(Flower.petal_length)
        - petal_width = FLOAT(Flower.petal_width)
    NODE("Species", "BioEntity", Flower.species) species:
        + Name = Flower.species
    RELATION(flower, "is", species):
    
ENTITY("Person"):
    NODE("Person") person:
        + ID = INT(Person.ID)
        - FirstName = Person.FirstName
        - Renamed = Person.LastName
        - Static = "staticstring"
    RELATION(person, "likes", MATCH("Species", Name=Person.FavoriteFlower)):
        - Since = "4ever"
        - EntityAttribute = INT(Person.ID)

ENTITY("FlowerParallel"):
    NODE("Species", "BioEntity", FlowerParallel.species) species:
        + Name = Flower.species
    
ENTITY("PersonParallel"):
    NODE("Person") person:
        + ID = INT(PersonParallel.ID)
        - FirstName = PersonParallel.FirstName
        - Renamed = PersonParallel.LastName
        - Static = "staticstring"
    RELATION(MATCH("Person", ID = 1), "likes_parallel", MATCH("Species", Name="virginica")):
        - pk = INT(PersonParallel.ID)
    RELATION(MATCH("Person", ID = 1), "likes_merged", MATCH("Species", Name="virginica")):
        + pk = 1

ENTITY("Entity"):
    DELAY_AND_MAYBE_EXIT(NODE("Entity")) entity:
        + ID = INT(Entity.ID)

ENTITY("PersonRaiseError"):
    RAISE_ERROR(NODE("Person")) person:
        + ID = INT(PersonRaiseError.ID)
        - FirstName = PersonRaiseError.FirstName
        - Renamed = PersonRaiseError.LastName
        - Static = "staticstring"
